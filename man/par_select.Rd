% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/par_select.R
\name{par_select}
\alias{par_select}
\title{Function to select optimal tuning parameter for edge detection (k) and surface recovery (k1)}
\usage{
par_select(k, k1, z, h, alpha_n = 0.05, alpha_jp = 0.05, omega = 0.5)
}
\arguments{
\item{k}{A vector of tuning parameter k, should all be odd numbers.}

\item{k1}{A vector of tuning parameter k1.}

\item{z}{Input image, single channel only, square image only.}

\item{h}{Parameter to adjust size of neighborhood during least square calculation, should be an integer.}

\item{alpha_n}{Parameter to adjust detection sensitivity, default 0.05.}

\item{alpha_jp}{Significance level to control the reconstruction performance of jump, default 0.05. Can be chosen from (0.5, 0.4, 0.3, 0.2, 0.15, 0.1, 0.075, 0.05, 0.025, 0.01, 0.001, 0.0001)}

\item{omega}{Parameter to adjust for selection preference, default 0.5. If greater than 0.5, focus more on edge detection, if less than 0.5, focus more on surface recovery.}
}
\value{
A message of selection.
}
\description{
Choose optimal tuning parameter for jump/edge detection and surface recovery/denoising. Omega value can be adjusted for better edge detection or better denoising.
}
\examples{
\dontrun{
# Generate a surface with a circular jump in the middle
n <- 64
x <- y <- (1:n) / n
f <- matrix(0, n, n)

for (i in 1:n) {
  for (j in 1:n) {
    if ((x[i] - 0.5)^2 + (y[j] - 0.5)^2 > 0.25^2) {
      f[i, j] <- -2 * (x[i] - 0.5)^2 - 2 * (y[j] - 0.5)^2
    } else {
      f[i, j] <- -2 * (x[i] - 0.5)^2 - 2 * (y[j] - 0.5)^2 + 1
    }
  }
}

# Adding normal noise
sigma <- 1 / 2 * sd(as.vector(f))
set.seed(1234)
noise <- matrix(rnorm(n * n, 0, sigma), n, n)
z <- f + noise

k <- c(3, 5, 7, 9, 11)
k1 <- c(5, 10, 15, 20, 25)

par_select(k, k1, z, h = 3, alpha_n = 0.05, alpha_jp = 0.05, omega = 0.5)
}
}
